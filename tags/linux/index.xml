<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>linux - 标签 - 九九</title>
        <link>https://dingjingmaster.github.io/tags/linux/</link>
        <description>linux - 标签 - 九九</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dingjing@live.cn (ding jing)</managingEditor>
            <webMaster>dingjing@live.cn (ding jing)</webMaster><lastBuildDate>Mon, 24 Jul 2023 16:18:33 &#43;0800</lastBuildDate><atom:link href="https://dingjingmaster.github.io/tags/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Intel架构介绍</title>
    <link>https://dingjingmaster.github.io/2023/07/0009-intel%E6%9E%B6%E6%9E%84/</link>
    <pubDate>Mon, 24 Jul 2023 16:18:33 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/07/0009-intel%E6%9E%B6%E6%9E%84/</guid>
    <description><![CDATA[简介 术语 英特尔®架构 包括微处理器和支持的硬件的组合，这些硬件为各种计算系统创建了构建块。 尽管该体系结构非常简单，但对于没有英特尔体系结构经验]]></description>
</item><item>
    <title>LXD</title>
    <link>https://dingjingmaster.github.io/2023/07/0015-lxd/</link>
    <pubDate>Mon, 03 Jul 2023 21:16:03 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/07/0015-lxd/</guid>
    <description><![CDATA[简介 LXD 是一个现代、安全、强大的系统容器和虚拟机管理器。 它为在容器或虚拟机中运行和管理完整的Linux系统提供了统一的体验。LXD为大量Lin]]></description>
</item><item>
    <title>Launchpad搭建</title>
    <link>https://dingjingmaster.github.io/2023/07/0014-launchpad%E6%90%AD%E5%BB%BA/</link>
    <pubDate>Mon, 03 Jul 2023 21:15:03 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/07/0014-launchpad%E6%90%AD%E5%BB%BA/</guid>
    <description><![CDATA[环境 Ubuntu 20.04服务器版（注意：16.04之前不支持了，22.04也不支持，截止2023-07-04支持的最新操作系统是20.04） python3.5 + LXD 容]]></description>
</item><item>
    <title>GObject使用——常见宏</title>
    <link>https://dingjingmaster.github.io/2023/04/0004-gobject%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Sun, 16 Apr 2023 10:47:09 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/04/0004-gobject%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[GObject 常用宏 G_TYPE_IS_OBJECT(type) 说明：检查传入的类型type是否为G_TYPE_OBJECT或其派生 1 #define G_TYPE_IS_OBJECT(type) (G_TYPE_FUNDAMENTAL (type) == G_TYPE_OBJECT) G_OBJECT(obj) 说明：将GObject或派生GObject的子]]></description>
</item><item>
    <title>GMainLoop</title>
    <link>https://dingjingmaster.github.io/2023/04/0003-gmainloop/</link>
    <pubDate>Fri, 14 Apr 2023 09:04:30 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/04/0003-gmainloop/</guid>
    <description><![CDATA[从g_main_loop_new开始&hellip; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 GMainLoop* g_main_loop_new (GMainContext* context, gboolean is_running) { GMainLoop *loop; if (!context) context = g_main_context_default(); g_main_context_ref (context); loop = g_new0 (GMainLoop, 1); loop-&gt;context = context; loop-&gt;is_running = is_running !=]]></description>
</item><item>
    <title>Qemu与KVM</title>
    <link>https://dingjingmaster.github.io/2023/04/0002-qemu%E4%B8%8Ekvm/</link>
    <pubDate>Thu, 13 Apr 2023 15:31:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/04/0002-qemu%E4%B8%8Ekvm/</guid>
    <description><![CDATA[虚拟化简介 虚拟化思想 虚拟化的主要思想是，通过分层将底层的复杂、难用的资源虚拟抽象成简单、易用的资源，提供给上层使用。 底层资源或者通过空间的分]]></description>
</item><item>
    <title>Qt 5.11.3编译过程中错误</title>
    <link>https://dingjingmaster.github.io/2023/03/0001-qt-5.11.3%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%94%99%E8%AF%AF/</link>
    <pubDate>Mon, 13 Mar 2023 08:28:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/03/0001-qt-5.11.3%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%94%99%E8%AF%AF/</guid>
    <description><![CDATA[qrandom.cpp:455:62: error: no matching function for call to ‘std::mersenne_twister_engine 解决方法: 打开 qrandom.cpp 文件，文件编辑器打开后，在220行添加类型声明：t]]></description>
</item><item>
    <title>UOS添加菜单项</title>
    <link>https://dingjingmaster.github.io/2023/02/0013-uos%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95%E9%A1%B9/</link>
    <pubDate>Sat, 04 Feb 2023 15:16:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/02/0013-uos%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95%E9%A1%B9/</guid>
    <description><![CDATA[需求背景 近来我做的项目需要在 UOS 文件管理器右键菜单添加几个菜单项，后来通过公司找到 UOS 同事，他们提供了两种解决方案给我且都可满足需求。本文接下来]]></description>
</item><item>
    <title>Linux音频体系结构——ALSA</title>
    <link>https://dingjingmaster.github.io/2023/01/0012-alsa/</link>
    <pubDate>Sat, 28 Jan 2023 10:17:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/01/0012-alsa/</guid>
    <description><![CDATA[ALSA是什么 ALSA(Advanced Linux Sound Architecture)是linux上主流的音频结构，提供了对音频和MIDI的支持，在没有出现ALSA架构之前，一直使]]></description>
</item><item>
    <title>ncurses入门</title>
    <link>https://dingjingmaster.github.io/2023/01/0001-ncurses%E5%85%A5%E9%97%A8/</link>
    <pubDate>Wed, 11 Jan 2023 21:03:48 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2023/01/0001-ncurses%E5%85%A5%E9%97%A8/</guid>
    <description><![CDATA[简介 在电传终端的旧时代，终端远离计算机，通过串行电缆与计算机连接。终端可以通过发送一系列字节来配置。终端的所有功能(如移动光标到一个新的位置]]></description>
</item></channel>
</rss>
