<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 九九</title>
        <link>https://dingjingmaster.github.io/posts/</link>
        <description>所有文章 | 九九</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dingjing@live.cn (ding jing)</managingEditor>
            <webMaster>dingjing@live.cn (ding jing)</webMaster><lastBuildDate>Sun, 24 Jul 2022 22:44:23 &#43;0800</lastBuildDate><atom:link href="https://dingjingmaster.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Vmware转qemu</title>
    <link>https://dingjingmaster.github.io/2022/07/0009-vmware%E8%BD%ACqemu/</link>
    <pubDate>Sun, 24 Jul 2022 22:44:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/07/0009-vmware%E8%BD%ACqemu/</guid>
    <description><![CDATA[从 windows 换成 linux 之后发现 vmware 在linux 下运行很卡，于是考虑使用 qemu，图形界面开源安装 virt-manager 方便使用，而 vmware 的虚拟磁盘用的是 vmdk， 需要转为qemu]]></description>
</item><item>
    <title>解析各种文件格式 Tika</title>
    <link>https://dingjingmaster.github.io/2022/07/0001-%E8%A7%A3%E6%9E%90%E5%90%84%E7%A7%8D%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F-tika/</link>
    <pubDate>Fri, 22 Jul 2022 22:46:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/07/0001-%E8%A7%A3%E6%9E%90%E5%90%84%E7%A7%8D%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F-tika/</guid>
    <description><![CDATA[tika 是什么 Apache Tika 用于文件类型检测和从各种格式的文件内容提取的库。在内部，Tika使用现有的各种文件解析器和文档类型的检测技术来检测和提取数据。使]]></description>
</item><item>
    <title>高效的序列化、反序列化工具——ProtoBuf</title>
    <link>https://dingjingmaster.github.io/2022/07/0006-%E9%AB%98%E6%95%88%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%B7%A5%E5%85%B7protocol-buffers/</link>
    <pubDate>Thu, 21 Jul 2022 23:01:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/07/0006-%E9%AB%98%E6%95%88%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%B7%A5%E5%85%B7protocol-buffers/</guid>
    <description><![CDATA[ProtoBuf 简介 ProtoBuf(Protocol Buffers) 是 Google 用于实现序列化与反序列化的开源项目，支持多语言、跨平台、可扩展的用于结构化数据的解决方案。 目前常见的序列化、反序列化方法包括但]]></description>
</item><item>
    <title>Linux终端git无法联网</title>
    <link>https://dingjingmaster.github.io/2022/07/0003-linux%E7%BB%88%E7%AB%AFgit%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91/</link>
    <pubDate>Tue, 19 Jul 2022 22:38:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/07/0003-linux%E7%BB%88%E7%AB%AFgit%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91/</guid>
    <description><![CDATA[问题描述 电脑使用了clash代理工具，配好环境之后浏览器可以访问谷歌和github，但是终端无法推送代码到github 解决方法 打开终端执行如]]></description>
</item><item>
    <title>用户空间拦截系统调用</title>
    <link>https://dingjingmaster.github.io/2022/07/0005-%E7%94%A8%E6%88%B7%E7%A9%BA%E9%97%B4%E6%8B%A6%E6%88%AA%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link>
    <pubDate>Tue, 12 Jul 2022 11:03:09 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/07/0005-%E7%94%A8%E6%88%B7%E7%A9%BA%E9%97%B4%E6%8B%A6%E6%88%AA%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid>
    <description><![CDATA[原理 Linux 允许让我们自己的动态库加载在其它动态库之前，甚至是系统库(libc.so.6)，如此我们可以通过自己实现动态库并提前加载来拦截系统调用]]></description>
</item><item>
    <title>BPF与eBPF</title>
    <link>https://dingjingmaster.github.io/2022/06/0001-bpf%E4%B8%8Eebpf/</link>
    <pubDate>Wed, 29 Jun 2022 11:02:30 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0001-bpf%E4%B8%8Eebpf/</guid>
    <description><![CDATA[BPF与eBPF是什么 BPF(Berkeley Packet Filter)，伯克利数据包过滤器，这项技术诞生于 1992 年，其作用是提升网络包过滤工具的性能，2014年正式加入Lin]]></description>
</item><item>
    <title>Golang无法识别GOROOT</title>
    <link>https://dingjingmaster.github.io/2022/06/0003-golang%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%ABgoroot/</link>
    <pubDate>Tue, 21 Jun 2022 09:15:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0003-golang%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%ABgoroot/</guid>
    <description><![CDATA[问题 已经安装好go并配置好GOROOT和GOPATH之后，在Goland无法自动识别出GOROOT。在Goland设置选择go安装目录下，提]]></description>
</item><item>
    <title>polkit 相关命令</title>
    <link>https://dingjingmaster.github.io/2022/06/0003-polkit-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Tue, 07 Jun 2022 19:55:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0003-polkit-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</guid>
    <description><![CDATA[pkcheck 检查进程是否被授权 说明 pkcheck用于检查进程(由&ndash;process(见下文)或&ndash;system-bus-name指]]></description>
</item><item>
    <title>polkit 授权管理器</title>
    <link>https://dingjingmaster.github.io/2022/06/0002-polkit/</link>
    <pubDate>Tue, 07 Jun 2022 18:55:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0002-polkit/</guid>
    <description><![CDATA[说明 polkit提供了一个授权API，特权程序(&ldquo;MECHANISMS&rdquo;)使用它为非特权程序(&ldquo;SUBJ]]></description>
</item><item>
    <title>Polkit 介绍</title>
    <link>https://dingjingmaster.github.io/2022/06/0001-polkit%E4%BB%8B%E7%BB%8D/</link>
    <pubDate>Tue, 07 Jun 2022 18:50:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0001-polkit%E4%BB%8B%E7%BB%8D/</guid>
    <description><![CDATA[polkit是什么? polkit提供了一个授权API，旨在由特权程序(“机制”)使用，为非特权程序(“客户端”)提供服务。查看polkit手]]></description>
</item></channel>
</rss>
