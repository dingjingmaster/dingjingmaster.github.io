<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>九九</title>
        <link>https://dingjingmaster.github.io/</link>
        <description>九九</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dingjing@live.cn (ding jing)</managingEditor>
            <webMaster>dingjing@live.cn (ding jing)</webMaster><lastBuildDate>Tue, 07 Jun 2022 19:55:26 &#43;0800</lastBuildDate>
            <atom:link href="https://dingjingmaster.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>polkit 相关命令</title>
    <link>https://dingjingmaster.github.io/2022/06/0003-polkit-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Tue, 07 Jun 2022 19:55:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0003-polkit-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</guid>
    <description><![CDATA[pkcheck 检查进程是否被授权 说明 pkcheck用于检查进程(由&ndash;process(见下文)或&ndash;system-bus-name指]]></description>
</item><item>
    <title>polkit 授权管理器</title>
    <link>https://dingjingmaster.github.io/2022/06/0002-polkit/</link>
    <pubDate>Tue, 07 Jun 2022 18:55:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0002-polkit/</guid>
    <description><![CDATA[说明 polkit提供了一个授权API，特权程序(&ldquo;MECHANISMS&rdquo;)使用它为非特权程序(&ldquo;SUBJ]]></description>
</item><item>
    <title>Polkit 介绍</title>
    <link>https://dingjingmaster.github.io/2022/06/0001-polkit%E4%BB%8B%E7%BB%8D/</link>
    <pubDate>Tue, 07 Jun 2022 18:50:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0001-polkit%E4%BB%8B%E7%BB%8D/</guid>
    <description><![CDATA[polkit是什么? polkit提供了一个授权API，旨在由特权程序(“机制”)使用，为非特权程序(“客户端”)提供服务。查看polkit手]]></description>
</item><item>
    <title>文件系统挂载API</title>
    <link>https://dingjingmaster.github.io/2022/06/0007-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BDapi/</link>
    <pubDate>Mon, 06 Jun 2022 17:48:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0007-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BDapi/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>现代c&#43;&#43;</title>
    <link>https://dingjingmaster.github.io/2022/06/0003-%E7%8E%B0%E4%BB%A3c-/</link>
    <pubDate>Wed, 01 Jun 2022 08:01:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/06/0003-%E7%8E%B0%E4%BB%A3c-/</guid>
    <description><![CDATA[现代C++，快速上手 C++11、C++14、C++17、C++20 概述 C++98 是C++第一个版本 C++98 之后积累十年出现 C++11 C++14/17 对C++11做了重要补充和优]]></description>
</item><item>
    <title>git rebase与merge的区别</title>
    <link>https://dingjingmaster.github.io/2022/05/0002-rebase%E4%B8%8Emerge%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Tue, 31 May 2022 10:32:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/05/0002-rebase%E4%B8%8Emerge%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[简单概括 git rebase 和 git merge 这两个命令旨在将更改代码从一个分支合并到另一个分支，只是两者合并方式不一样。 融合代码到公共分支的时候用 git merge，而不能]]></description>
</item><item>
    <title>git fetch与pull区别</title>
    <link>https://dingjingmaster.github.io/2022/05/0001-fetch%E4%B8%8Epull%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Tue, 31 May 2022 09:40:03 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/05/0001-fetch%E4%B8%8Epull%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[简单概括 git fetch 是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中。 git pull 则是将远程主机的最新内容拉下来后直接合并，即：]]></description>
</item><item>
    <title>ldmappings 文件系统权限</title>
    <link>https://dingjingmaster.github.io/2022/05/0006-ldmappings-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90/</link>
    <pubDate>Mon, 30 May 2022 17:48:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/05/0006-ldmappings-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90/</guid>
    <description><![CDATA[ldmappings 大多数文件系统开发人员都遇到过idmapping。当从磁盘读取或写入权限、向用户空间报告所有权或用于权限检查时使用它们。本文的目标读者是想]]></description>
</item><item>
    <title>自动挂载支持</title>
    <link>https://dingjingmaster.github.io/2022/05/0005-%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E6%94%AF%E6%8C%81/</link>
    <pubDate>Mon, 30 May 2022 17:18:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/05/0005-%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E6%94%AF%E6%8C%81/</guid>
    <description><![CDATA[自动挂载支持 希望实现自动挂载支持的文件系统也可以获得支持(例如可以在 fs/afs/ 中找到kAFS，在 fs/nfs/ 中找到NFS)。这个功能包括允许执行核内挂载以及请]]></description>
</item><item>
    <title>linux kernel 路径查询</title>
    <link>https://dingjingmaster.github.io/2022/05/0003-%E8%B7%AF%E5%BE%84%E6%9F%A5%E8%AF%A2/</link>
    <pubDate>Thu, 26 May 2022 08:47:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://dingjingmaster.github.io/2022/05/0003-%E8%B7%AF%E5%BE%84%E6%9F%A5%E8%AF%A2/</guid>
    <description><![CDATA[路径名查询说明 路径名查找几乎没有可以取巧的方法，因此反而比较复杂。有许多规则、特殊情况和实现替代方案，所有这些都使读者感到困惑。 然而，计算机]]></description>
</item></channel>
</rss>
